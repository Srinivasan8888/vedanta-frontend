{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srini\\\\OneDrive\\\\Desktop\\\\vedenta\\\\vedanta-multi-sensor\\\\src\\\\components\\\\login\\\\ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom'; // const isAuthenticated = () => {\n//   const token = localStorage.getItem('token');\n//   return !!token;\n// };\n// const ProtectedRoute = ({ element: Element }) => {\n//   return isAuthenticated() ? <Element /> : <Navigate to=\"/login\" replace />;\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = () => {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/Users/srini/OneDrive/Desktop/vedenta/vedanta-multi-sensor/src/components/login/ProtectedRoute.jsx"],"names":["React","Navigate","Outlet","ProtectedRoute","token","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,kBAAjC,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;AACA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,MAAGF,KAAH,EAAU;AACR,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEM;AACJ,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CARD;;KAAMD,c;AAUN,eAAeA,cAAf","sourcesContent":["import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\n\r\n// const isAuthenticated = () => {\r\n//   const token = localStorage.getItem('token');\r\n//   return !!token;\r\n// };\r\n\r\n// const ProtectedRoute = ({ element: Element }) => {\r\n//   return isAuthenticated() ? <Element /> : <Navigate to=\"/login\" replace />;\r\n// };\r\nconst ProtectedRoute = () => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  if(token) {\r\n    return <Outlet />\r\n  }else {\r\n    return <Navigate to={\"/login\"}/>;\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"]},"metadata":{},"sourceType":"module"}
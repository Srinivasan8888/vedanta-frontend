{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\srini\\\\OneDrive\\\\Desktop\\\\vedenta\\\\vedanta-multi-sensor\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\srini\\\\OneDrive\\\\Desktop\\\\vedenta\\\\vedanta-multi-sensor\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\srini\\\\OneDrive\\\\Desktop\\\\vedenta\\\\vedanta-multi-sensor\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useState,useRef}from'react';import Chart from'chart.js/auto';import'../graph/graph.scss';import ChartDash from'./ChartDash';import{isEqual}from'lodash';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Graph=function Graph(){var chartRef=useRef(null);var _useState=useState(),_useState2=_slicedToArray(_useState,2),isOpengraph=_useState2[0],setIsOpengrph=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),infoGraph=_useState4[0],setInfoGraph=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),infoFind=_useState8[0],setInfoFind=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),peakName=_useState10[0],setPeakName=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),graphData=_useState12[0],setGraphData=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),graphUpdateData=_useState14[0],setGraphUpdateData=_useState14[1];var _useState15=useState(),_useState16=_slicedToArray(_useState15,2),selectedWaveGuideChart=_useState16[0],setSelectedWaveGuideChart=_useState16[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,infoVal;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"http://localhost:4000/sensor/updated\");case 3:response=_context.sent;_context.next=6;return response.json();case 6:infoVal=_context.sent;setInfoGraph(infoVal);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);setError(_context.t0);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();var interval=setInterval(function(){fetchData();},1000);return function(){clearInterval(interval);};},[]);useEffect(function(){var sensorArray=[];var topPeak;for(var index=1;index<=108;index++){var _infoGraph$;var sensorName=\"sensor\".concat(index);var val=(_infoGraph$=infoGraph[0])===null||_infoGraph$===void 0?void 0:_infoGraph$[sensorName];sensorArray.push({sensorName:sensorName,val:val});var descending=sensorArray.sort(function(a,b){return b.val-a.val;});topPeak=descending.slice(0,5);}if(topPeak!==undefined){setPeakName(topPeak[0].sensorName);}},[infoGraph]);useEffect(function(){var chart=null;// Initialize chart as null\nvar peakNameChart=peakName;var updateName;if(peakNameChart){updateName=peakNameChart.replace(\"sensor\",\"CBT\");}// Function to create or update the chart\nvar createOrUpdateChart=function createOrUpdateChart(){// Sample data for the Line Chart\nvar data={labels:graphUpdateData,datasets:[{label:\"Peak \".concat(updateName),data:graphData,borderColor:'rgba(75, 192, 192, 1)',backgroundColor:'rgba(75, 192, 192, 0.2)',tension:0.1}]};// Chart.js configuration options\nvar options={responsive:true,maintainAspectRatio:false,scales:{y:{beginAtZero:true}}};if(chart){// Check if chart data or options have changed\nvar chartDataChanged=!isEqual(chart.data,data);var chartOptionsChanged=!isEqual(chart.options,options);if(chartDataChanged||chartOptionsChanged){// Update the chart data and options\nchart.data=data;chart.options=options;chart.update();// Update the chart with new data and options\n}}else{// Create a new Line Chart instance\nchart=new Chart(chartRef.current,{type:'line',data:data,options:options});}};// Call the createOrUpdateChart function initially\ncreateOrUpdateChart();// Cleanup on unmount\nreturn function(){if(chart){chart.destroy();}};},[graphData,graphUpdateData,peakName]);useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,infoVal;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"http://localhost:4000/sensor/find\");case 3:response=_context2.sent;_context2.next=6;return response.json();case 6:infoVal=_context2.sent;setInfoFind(infoVal);_context2.next=13;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[0,10]]);}));return function fetchData(){return _ref2.apply(this,arguments);};}();var interval=setInterval(function(){fetchData();},5000);return function(){clearInterval(interval);};},[]);useEffect(function(){var peakArray=[];var updateTime=[];for(var index=0;index<infoFind.length;index++){if(peakName!==undefined||null){var _infoFind$index,_infoFind$index2;peakArray[index]=(_infoFind$index=infoFind[index])===null||_infoFind$index===void 0?void 0:_infoFind$index[peakName];updateTime[index]=(_infoFind$index2=infoFind[index])===null||_infoFind$index2===void 0?void 0:_infoFind$index2.updatedAt;}}setGraphData(peakArray);setGraphUpdateData(updateTime);},[infoFind,peakName]);if(error){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error.message]});}if(!infoGraph){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}var handleWaveGuideClickChart=function handleWaveGuideClickChart(waveGuideNumber){setSelectedWaveGuideChart(waveGuideNumber);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"box-graph\",children:/*#__PURE__*/_jsx(\"canvas\",{ref:chartRef,height:\"70px\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"box-chart\",onClick:function onClick(){setIsOpengrph(true);handleWaveGuideClickChart(1);},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"waveGuide 1\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"(CBT1-CBT10)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"box-chart\",onClick:function onClick(){setIsOpengrph(true);handleWaveGuideClickChart(2);},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"waveGuide 2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"(CBT11-CBT20)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"box-chart\",onClick:function onClick(){setIsOpengrph(true);handleWaveGuideClickChart(3);},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"waveGuide 3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"(CBT21-CBT30)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"box-chart\",onClick:function onClick(){setIsOpengrph(true);handleWaveGuideClickChart(4);},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"waveGuide 4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"(CBT31-CBT40)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"box-chart\",onClick:function onClick(){setIsOpengrph(true);handleWaveGuideClickChart(5);},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"waveGuide 5\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"(CBT41-CBT50)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"box-chart\",onClick:function onClick(){setIsOpengrph(true);handleWaveGuideClickChart(6);},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"waveGuide 6\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"(CBT51-CBT60)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"box-chart\",onClick:function onClick(){setIsOpengrph(true);handleWaveGuideClickChart(7);},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"waveGuide 7\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"(CBT61-CBT70)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"box-chart\",onClick:function onClick(){setIsOpengrph(true);handleWaveGuideClickChart(8);},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"waveGuide 8\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"(CBT71-CBT80)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"box-chart\",onClick:function onClick(){setIsOpengrph(true);handleWaveGuideClickChart(9);},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"waveGuide 9\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"(CBT81-CBT90)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"box-chart\",onClick:function onClick(){setIsOpengrph(true);handleWaveGuideClickChart(10);},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"waveGuide 10\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"(CBT91-CBT100)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"box-chart\",onClick:function onClick(){setIsOpengrph(true);handleWaveGuideClickChart(11);},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"waveGuide 11\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"(CBT101-CBT108)\"})]}),/*#__PURE__*/_jsx(ChartDash,{openGraph:isOpengraph,closeGraph:function closeGraph(){return setIsOpengrph(false);},waveGuideSelected:selectedWaveGuideChart})]})]});};export default Graph;","map":{"version":3,"sources":["C:/Users/srini/OneDrive/Desktop/vedenta/vedanta-multi-sensor/src/pages/graph/Graph.jsx"],"names":["React","useEffect","useState","useRef","Chart","ChartDash","isEqual","Graph","chartRef","isOpengraph","setIsOpengrph","infoGraph","setInfoGraph","error","setError","infoFind","setInfoFind","peakName","setPeakName","graphData","setGraphData","graphUpdateData","setGraphUpdateData","selectedWaveGuideChart","setSelectedWaveGuideChart","fetchData","fetch","response","json","infoVal","interval","setInterval","clearInterval","sensorArray","topPeak","index","sensorName","val","push","descending","sort","a","b","slice","undefined","chart","peakNameChart","updateName","replace","createOrUpdateChart","data","labels","datasets","label","borderColor","backgroundColor","tension","options","responsive","maintainAspectRatio","scales","y","beginAtZero","chartDataChanged","chartOptionsChanged","update","current","type","destroy","console","log","peakArray","updateTime","length","updatedAt","message","handleWaveGuideClickChart","waveGuideNumber"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport '../graph/graph.scss';\r\nimport ChartDash from './ChartDash';\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Graph = () => {\r\n  const chartRef = useRef(null);\r\n\r\n  const [isOpengraph, setIsOpengrph] = useState();\r\n\r\n  const [infoGraph, setInfoGraph] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  const [infoFind, setInfoFind] = useState([]);\r\n\r\n  const [peakName, setPeakName] = useState();\r\n\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [graphUpdateData, setGraphUpdateData] = useState([]);\r\n\r\n  const [selectedWaveGuideChart, setSelectedWaveGuideChart] = useState();\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:4000/sensor/updated\");\r\n        const infoVal = await response.json();\r\n        setInfoGraph(infoVal);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    };\r\n    const interval = setInterval(() => {\r\n      fetchData();\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const sensorArray = [];\r\n    var topPeak;\r\n    for (let index = 1; index <= 108; index++) {\r\n      let sensorName = `sensor${index}`;\r\n      const val = infoGraph[0]?.[sensorName];\r\n      sensorArray.push({sensorName, val});\r\n      const descending = sensorArray.sort((a, b) => b.val - a.val);\r\n      topPeak = descending.slice(0, 5);\r\n    }\r\n    if(topPeak !== undefined){\r\n      setPeakName(topPeak[0].sensorName);\r\n    }\r\n    },[infoGraph]);\r\n\r\n    useEffect(() => {\r\n      let chart = null; // Initialize chart as null\r\n    \r\n      let peakNameChart = peakName;\r\n      var updateName;\r\n      if (peakNameChart) {\r\n        updateName = peakNameChart.replace(\"sensor\", \"CBT\");\r\n      }\r\n    \r\n      // Function to create or update the chart\r\n      const createOrUpdateChart = () => {\r\n        // Sample data for the Line Chart\r\n        const data = {\r\n          labels: graphUpdateData,\r\n          datasets: [\r\n            {\r\n              label: `Peak ${updateName}`,\r\n              data: graphData,\r\n              borderColor: 'rgba(75, 192, 192, 1)',\r\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n              tension: 0.1,\r\n            },\r\n          ],\r\n        };\r\n    \r\n        // Chart.js configuration options\r\n        const options = {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        };\r\n    \r\n        if (chart) {\r\n          // Check if chart data or options have changed\r\n          const chartDataChanged = !isEqual(chart.data, data);\r\n          const chartOptionsChanged = !isEqual(chart.options, options);\r\n    \r\n          if (chartDataChanged || chartOptionsChanged) {\r\n            // Update the chart data and options\r\n            chart.data = data;\r\n            chart.options = options;\r\n            chart.update(); // Update the chart with new data and options\r\n          }\r\n        } else {\r\n          // Create a new Line Chart instance\r\n          chart = new Chart(chartRef.current, {\r\n            type: 'line',\r\n            data: data,\r\n            options: options,\r\n          });\r\n        }\r\n      };\r\n    \r\n      // Call the createOrUpdateChart function initially\r\n      createOrUpdateChart();\r\n    \r\n      // Cleanup on unmount\r\n      return () => {\r\n        if (chart) {\r\n          chart.destroy();\r\n        }\r\n      };\r\n    }, [graphData, graphUpdateData, peakName]);\r\n    \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await fetch(\"http://localhost:4000/sensor/find\");\r\n          const infoVal = await response.json();\r\n          setInfoFind(infoVal);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      };\r\n    \r\n      const interval = setInterval(() => {\r\n        fetchData();\r\n      }, 5000);\r\n    \r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n      const peakArray = [];\r\n      const updateTime = [];\r\n      for (let index = 0; index < infoFind.length; index++) {\r\n        if (peakName !== undefined || null) {\r\n          peakArray[index] = infoFind[index]?.[peakName];\r\n          updateTime[index] = infoFind[index]?.updatedAt;\r\n        }\r\n      }\r\n      setGraphData(peakArray);\r\n      setGraphUpdateData(updateTime);\r\n    }, [infoFind, peakName]);\r\n    \r\n    \r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  if (!infoGraph) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const handleWaveGuideClickChart = (waveGuideNumber) => {\r\n    setSelectedWaveGuideChart(waveGuideNumber);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n\r\n      <div className=\"box-graph\">\r\n        <canvas ref={chartRef} height={`70px`}/>\r\n      </div>\r\n      \r\n      <div className=\"box\">\r\n        <div className=\"box-chart\" onClick={()=>{setIsOpengrph(true); handleWaveGuideClickChart(1)}}>\r\n          <h1>waveGuide 1</h1>\r\n          <span className=\"text-sm\">(CBT1-CBT10)</span>\r\n        </div>\r\n        <div className=\"box-chart\" onClick={()=>{setIsOpengrph(true); handleWaveGuideClickChart(2)}}>\r\n          <h1>waveGuide 2</h1>\r\n          <span className=\"text-sm\">(CBT11-CBT20)</span>\r\n        </div>\r\n        <div className=\"box-chart\" onClick={()=>{setIsOpengrph(true); handleWaveGuideClickChart(3)}}>\r\n          <h1>waveGuide 3</h1>\r\n          <span className=\"text-sm\">(CBT21-CBT30)</span>\r\n        </div>\r\n        <div className=\"box-chart\" onClick={()=>{setIsOpengrph(true); handleWaveGuideClickChart(4)}}>\r\n          <h1>waveGuide 4</h1>\r\n          <span className=\"text-sm\">(CBT31-CBT40)</span>\r\n        </div>\r\n        <div className=\"box-chart\" onClick={()=>{setIsOpengrph(true); handleWaveGuideClickChart(5)}}>\r\n          <h1>waveGuide 5</h1>\r\n          <span className=\"text-sm\">(CBT41-CBT50)</span>\r\n        </div>\r\n        <div className=\"box-chart\" onClick={()=>{setIsOpengrph(true); handleWaveGuideClickChart(6)}}>\r\n          <h1>waveGuide 6</h1>\r\n          <span className=\"text-sm\">(CBT51-CBT60)</span>\r\n        </div>\r\n        <div className=\"box-chart\" onClick={()=>{setIsOpengrph(true); handleWaveGuideClickChart(7)}}>\r\n          <h1>waveGuide 7</h1>\r\n          <span className=\"text-sm\">(CBT61-CBT70)</span>\r\n        </div>\r\n        <div className=\"box-chart\" onClick={()=>{setIsOpengrph(true); handleWaveGuideClickChart(8)}}>\r\n          <h1>waveGuide 8</h1>\r\n          <span className=\"text-sm\">(CBT71-CBT80)</span>\r\n        </div>\r\n        <div className=\"box-chart\" onClick={()=>{setIsOpengrph(true); handleWaveGuideClickChart(9)}}>\r\n          <h1>waveGuide 9</h1>\r\n          <span className=\"text-sm\">(CBT81-CBT90)</span>\r\n        </div>\r\n        <div className=\"box-chart\" onClick={()=>{setIsOpengrph(true); handleWaveGuideClickChart(10)}}>\r\n          <h1>waveGuide 10</h1>\r\n          <span className=\"text-sm\">(CBT91-CBT100)</span>\r\n        </div>\r\n        <div className=\"box-chart\" onClick={()=>{setIsOpengrph(true); handleWaveGuideClickChart(11)}}>\r\n          <h1>waveGuide 11</h1>\r\n          <span className=\"text-sm\">(CBT101-CBT108)</span>\r\n        </div>\r\n        {/* <div className=\"box-chart hide\">\r\n          <h1>waveGuide 12</h1>\r\n        </div>\r\n        <div className=\"box-chart hide\">\r\n          <h1>waveGuide 13</h1>\r\n        </div>\r\n        <div className=\"box-chart hide\">\r\n          <h1>waveGuide 14</h1>\r\n        </div>\r\n        <div className=\"box-chart hide\">\r\n          <h1>waveGuide 15</h1>\r\n        </div> */}\r\n\r\n        <ChartDash openGraph={isOpengraph} closeGraph={()=>setIsOpengrph(false)} waveGuideSelected={selectedWaveGuideChart} />\r\n        \r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;"]},"metadata":{},"sourceType":"module"}